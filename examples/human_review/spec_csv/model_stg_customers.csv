MODEL,stg_customers
Layer,staging
Sources,"raw.crm_customers, raw.crm_addresses"

COLUMN MAPPINGS
Target Column,Type,From Table,From Column,Transform,Nullable,Tests,Description
customer_id,INT64,crm_customers,customer_id,,No,"not_null, unique",Primary business key
email,STRING,crm_customers,email,LOWER(TRIM({from})),No,not_null,Standardized email
phone_e164,STRING,crm_customers,phone,"CASE WHEN REGEXP_CONTAINS(REGEXP_REPLACE({from}, '[^0-9]', ''), r'^1?[0-9]{10}$') THEN CONCAT('+1', RIGHT(REGEXP_REPLACE({from}, '[^0-9]', ''), 10)) WHEN REGEXP_CONTAINS(REGEXP_REPLACE({from}, '[^0-9]', ''), r'^[0-9]{11,15}$') THEN CONCAT('+', REGEXP_REPLACE({from}, '[^0-9]', '')) ELSE NULL END",Yes,,Normalized phone
lifecycle_stage,STRING,crm_customers,status,CASE WHEN {from} = 'active' THEN 'active' WHEN {from} = 'inactive' THEN 'churned' WHEN {from} = 'trial' THEN 'trial' WHEN {from} = 'prospect' THEN 'prospect' ELSE 'unknown' END,No,accepted_values(...),Standardized lifecycle
country,STRING,crm_addresses,country,,Yes,,Country from best address
city,STRING,crm_addresses,city,,Yes,,City
state,STRING,crm_addresses,state,,Yes,,State
postal_code,STRING,crm_addresses,postal_code,,Yes,,Postal code
created_at,TIMESTAMP,crm_customers,created_at,,No,not_null,Ingestion baseline

JOINS
Left Table,Right Table,Type,Condition
crm_customers,crm_addresses,LEFT,crm_customers.customer_id = crm_addresses.customer_id

FILTERS
Applies To,Predicate,Rationale
crm_addresses,country IS NOT NULL,drop incomplete addresses

CONSTRAINTS
primary_key,customer_id
partition_by,
cluster_by,
